{"version":3,"sources":["components/appBar.js","components/textField.js","components/secondAppBar.js","components/Group.js","components/List.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","props","classes","react_default","a","createElement","className","AppBar_default","position","color","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","variant","Button_default","OutlinedTextFields","state","name","test","handleChange","event","_this","setState","Object","defineProperty","target","value","handleClickAddItem","add_item","this","TextField_default","id","label","fullWidth","dense","onChange","margin","InputProps","endAdornment","InputAdornment_default","onClick","Send_default","React","Component","theme","container","display","flexWrap","textField","spacing","unit","marginTop","menu","width","SimpleAppBar","_this$props","FolderList","selectedIndex","handleListItemClick","index","console","log","_this2","items","Fragment","List_default","map","item","ListItem_default","key","button","Avatar_default","Image_default","ListItemText_default","primary","secondary","ListItemSecondaryAction_default","Edit_default","backgroundColor","CheckboxList","checked","handleToggle","currentIndex","indexOf","newChecked","toConsumableArray","push","splice","role","undefined","Checkbox_default","tabIndex","disableRipple","concat","Delete_default","palette","background","paper","App","elements","handleChangeItems","new_item","mod_array","appBar","secondAppBar","Group","components_List","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yXA4CeA,2BAnCA,CACXC,KAAM,CACFC,SAAU,GAEdC,KAAM,CACFD,SAAU,GAEdE,WAAY,CACRC,YAAa,GACbC,YAAa,KA0BNN,CAvBf,SAAsBO,GAAO,IACjBC,EAAYD,EAAZC,QACR,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQP,MACpBQ,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,SAAS,SAASC,MAAQ,aAC9BN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,KACID,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAYE,UAAWJ,EAAQJ,WAAYW,MAAM,UAAUG,aAAW,QAClET,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,OAEJD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAYW,QAAQ,KAAKN,MAAM,UAAUH,UAAWJ,EAAQL,MAA5D,UAGAM,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQK,MAAM,WAAd,6ECRdQ,6MACFC,MAAQ,CACJC,KAAM,GACNC,KAAK,MAGTC,aAAe,SAAAF,GAAI,OAAI,SAAAG,GACnBC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKN,EAAOG,EAAMK,OAAOC,YAG7BC,mBAAqB,WACjBN,EAAKtB,MAAM6B,SAASP,EAAKL,MAAMC,MAC/BI,EAAKC,SAAS,CAACJ,KAAKG,EAAKL,MAAMC,gFAE3B,IACIjB,EAAY6B,KAAK9B,MAAjBC,QAER,OACQC,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,CACI6B,GAAG,gBACHC,MAAM,QACNC,WAAS,EACT7B,UAAWJ,EAAQkC,MACnBC,SAAUN,KAAKV,aAAa,QAC5BiB,OAAO,QACPvB,QAAQ,WACRwB,WAAY,CACRC,aACIrC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAgBI,SAAS,OACrBL,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACIQ,aAAW,WACX8B,QAASX,KAAKF,oBACjB1B,EAAAC,EAAAC,cAACsC,EAAAvC,EAAD,kBAjCAwC,IAAMC,WAgDxBnD,uBAjEA,SAAAoD,GAAK,MAAK,CACrBC,UAAW,CACPC,QAAS,OACTC,SAAU,QAEdC,UAAW,CACPnD,WAAY+C,EAAMK,QAAQC,KAC1BpD,YAAa8C,EAAMK,QAAQC,MAE/BhB,MAAO,CACHiB,UAAW,GAEfC,KAAM,CACFC,MAAO,OAoDA7D,CAAmBuB,GC5D5BuC,mLACM,IAAAC,EACsB1B,KAAK9B,MAA3BC,EADAuD,EACAvD,QAAS4B,EADT2B,EACS3B,SAEjB,OACI3B,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQP,MACpBQ,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,SAAS,SAASC,MAAM,WAC5BN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,KACID,EAAAC,EAAAC,cAAC6C,EAAD,CAAoBpB,SAAYA,cARzBc,IAAMC,WAoBlBnD,uBA1BA,CACXC,KAAM,CACFC,SAAU,IAwBHF,CAAmB8D,6HCbxBE,6MACFxC,MAAQ,CACJyC,cAAe,QAEnBC,oBAAsB,SAACC,GACnBC,QAAQC,IAAIF,GACZtC,EAAKC,SAAS,CAACmC,cAAeE,6EAEzB,IAAAG,EAAAjC,KAAA0B,EACoB1B,KAAK9B,MAAvBC,EADFuD,EACEvD,QAAS+D,EADXR,EACWQ,MACTN,EAAiB5B,KAAKb,MAAtByC,cACP,OACIxD,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,SAAP,KACI/D,EAAAC,EAAAC,cAAA,SAAIsD,GACRxD,EAAAC,EAAAC,cAAC8D,EAAA/D,EAAD,CAAME,UAAWJ,EAAQP,MACpBsE,EAAMG,IAAI,SAACC,EAAKR,GAAN,OACX1D,EAAAC,EAAAC,cAACiE,EAAAlE,EAAD,CACImE,IAAKV,EACLW,QAAM,EACN9B,QAAS,kBAAMsB,EAAKJ,oBAAoBC,KAExC1D,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,KACAD,EAAAC,EAAAC,cAACqE,EAAAtE,EAAD,MACCiE,GAEDlE,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CAAcwE,QAAUP,EAAMQ,UAAU,gBACxC1E,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,KACID,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAYQ,aAAW,UACnBT,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,oBA5BHwC,IAAMC,WA2CpBnD,uBAnDA,iBAAO,CAClBC,KAAM,CACF4D,MAAO,OACPF,UAAW,EACX2B,gBAAiB,WA+CVtF,CAAmBgE,sDC5C5BuB,8MACF/D,MAAQ,CACJgE,QAAS,CAAC,MAGdC,aAAe,SAAAvD,GAAK,OAAI,WAAM,IAClBsD,EAAY3D,EAAKL,MAAjBgE,QACFE,EAAeF,EAAQG,QAAQzD,GAC/B0D,EAAU7D,OAAA8D,EAAA,EAAA9D,CAAOyD,IAED,IAAlBE,EACAE,EAAWE,KAAK5D,GAEhB0D,EAAWG,OAAOL,EAAc,GAGpC7D,EAAKC,SAAS,CACV0D,QAASI,8EAIR,IAAAtB,EAAAjC,KACG7B,EAAY6B,KAAK9B,MAAjBC,QAER,OACIC,EAAAC,EAAAC,cAAC8D,EAAA/D,EAAD,CAAME,UAAWJ,EAAQP,MACpB,CAAC,EAAG,EAAG,EAAG,GAAGyE,IAAI,SAAAxC,GAAK,OACnBzB,EAAAC,EAAAC,cAACiE,EAAAlE,EAAD,CAAUmE,IAAK3C,EAAO8D,UAAMC,EAAWvD,OAAK,EAACoC,QAAM,EAAC9B,QAASsB,EAAKmB,aAAavD,IAC3EzB,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,CACI8E,SAAgD,IAAvClB,EAAK9C,MAAMgE,QAAQG,QAAQzD,GACpCiE,UAAW,EACXC,eAAa,IAEjB3F,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CAAcwE,QAAO,QAAAmB,OAAUnE,EAAQ,KACvCzB,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,KACID,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAYQ,aAAW,YACnBT,EAAAC,EAAAC,cAAC2F,GAAA5F,EAAD,mBApCLwC,IAAMC,WAkDlBnD,wBA1DA,SAAAoD,GAAK,MAAK,CACrBnD,KAAM,CACF4D,MAAO,OACPF,UAAW,EACX2B,gBAAiBlC,EAAMmD,QAAQC,WAAWC,SAsDnCzG,CAAmBuF,ICxClBmB,sNArBZlF,MAAQ,CACJmF,SAAU,CAAC,KAAK,IAAI,IAAI,QAE5BC,kBAAoB,SAACC,GACjB,IAAIC,EAAYjF,EAAKL,MAAMmF,SAC3BG,EAAUhB,KAAKe,GACfhF,EAAKC,SAAS,CAAC6E,SAAUG,6EAEtB,IACIH,EAAatE,KAAKb,MAAlBmF,SACX,OACIlG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACoG,EAAD,MACAtG,EAAAC,EAAAC,cAACqG,EAAD,CAAc5E,SAAYC,KAAKuE,oBAC7BnG,EAAAC,EAAAC,cAACsG,EAAD,CAAY1C,MAAOoC,IACnBlG,EAAAC,EAAAC,cAACuG,GAAD,cAhBM/D,cCKEgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhH,EAAAC,EAAAC,cAAC+G,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2c800ade.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n};\nfunction ButtonAppBar(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color = \"secondary\">\n                <Toolbar>\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                        MY APP\n                    </Typography>\n                    <Button color=\"inherit\">LOGIN</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nButtonAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ButtonAppBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    dense: {\n        marginTop: 5,\n    },\n    menu: {\n        width: 200,\n    },\n});\n\nclass OutlinedTextFields extends React.Component {\n    state = {\n        name: '',\n        test:'',\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n    handleClickAddItem = () => {\n        this.props.add_item(this.state.name);\n        this.setState({test:this.state.name});\n    };\n    render(){\n        const { classes } = this.props;\n\n        return (\n                <TextField\n                    id=\"outlined-name\"\n                    label=\"Input\"\n                    fullWidth\n                    className={classes.dense}\n                    onChange={this.handleChange('name')}\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"Add Item\"\n                                    onClick={this.handleClickAddItem}\n                                ><SendIcon/>\n                                </IconButton>\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n\n        );\n    }\n}\n\nOutlinedTextFields.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(OutlinedTextFields);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport OutlinedTextFields from './textField'\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n};\n\nclass SimpleAppBar extends React.Component{\n    render(){\n    const { classes, add_item } = this.props;\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color=\"default\">\n                <Toolbar>\n                    <OutlinedTextFields add_item = {add_item}/>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n}\n\nSimpleAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleAppBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst styles = () => ({\n    root: {\n        width: '100%',\n        marginTop: 4,\n        backgroundColor: 'white',\n    },\n});\n\n    class FolderList extends React.Component {\n        state = {\n            selectedIndex: null,\n        };\n        handleListItemClick = (index) => {\n            console.log(index);\n            this.setState({selectedIndex: index});\n        };\n        render() {\n            const {classes, items} = this.props;\n            const {selectedIndex} = this.state;\n            return (\n                <React.Fragment>\n                    <b>{selectedIndex}</b>\n                <List className={classes.root}>\n                    {items.map((item,index) => (\n                    <ListItem\n                        key={index}\n                        button\n                        onClick={() => this.handleListItemClick(index)}\n                    >\n                        <Avatar>\n                        <ImageIcon/>\n                        {item}\n                        </Avatar>\n                        <ListItemText primary={ item} secondary=\"Jan 9, 2014\"/>\n                        <ListItemSecondaryAction>\n                            <IconButton aria-label=\"Delete\">\n                                <EditIcon/>\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                        ))}\n                </List>\n                </React.Fragment>\n            );\n        }\n    }\n\nFolderList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FolderList);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: 2,\n        backgroundColor: theme.palette.background.paper,\n    },\n});\n\nclass CheckboxList extends React.Component {\n    state = {\n        checked: [0],\n    };\n\n    handleToggle = value => () => {\n        const { checked } = this.state;\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        this.setState({\n            checked: newChecked,\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <List className={classes.root}>\n                {[0, 1, 2, 3].map(value => (\n                    <ListItem key={value} role={undefined} dense button onClick={this.handleToggle(value)}>\n                        <Checkbox\n                            checked={this.state.checked.indexOf(value) !== -1}\n                            tabIndex={-1}\n                            disableRipple\n                        />\n                        <ListItemText primary={`Line ${value + 1}`} />\n                        <ListItemSecondaryAction>\n                            <IconButton aria-label=\"Comments\">\n                                <DeleteIcon />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                ))}\n            </List>\n        );\n    }\n}\n\nCheckboxList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CheckboxList);","import React, { Component } from 'react';\nimport ButtonAppBar from './components/appBar'\nimport SimpleAppBar from './components/secondAppBar'\nimport FolderList from './components/Group'\nimport CheckboxList from './components/List'\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        elements: ['10','2','3','4']\n    }\n    handleChangeItems = (new_item) => {\n        let mod_array = this.state.elements;\n        mod_array.push(new_item);\n        this.setState({elements: mod_array});\n    };\n  render() {\n        const{ elements } = this.state;\n    return (\n        <div className=\"App\">\n          <ButtonAppBar/>\n          <SimpleAppBar add_item = {this.handleChangeItems}/>\n            <FolderList items={elements}/>\n            <CheckboxList/>\n        </div>\n    );\n  }\n}\n\nexport default (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}