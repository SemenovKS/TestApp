{"version":3,"sources":["Redux/Reducers/todos.js","cache/index.js","Redux/Reducers/index.js","Redux/actionTypes.js","Redux/store.js","components/appBar.js","Redux/actions.js","components/textField.js","components/secondAppBar.js","components/Group.js","components/List.js","App.js","serviceWorker.js","index.js"],"names":["newState","CacheManager","writeData","key","data","localforage","setItem","readData","getItem","removeData","removeItem","clear","initialState","allIds","byIds","cache","combineReducers","todos","state","arguments","length","undefined","action","type","content","payload","id","Object","objectSpread","concat","toConsumableArray","defineProperty","completed","createStore","rootReducer","withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","props","classes","react_default","a","createElement","className","AppBar_default","position","color","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","variant","Button_default","nextTodoId","OutlinedTextFields","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","input","target","value","handleClickAddItem","addTodo","TextField_default","label","fullWidth","dense","onChange","InputProps","endAdornment","InputAdornment_default","onClick","Send_default","React","Component","connect","theme","container","display","flexWrap","textField","spacing","unit","marginTop","menu","width","SimpleAppBar","_this$props","add_item","FolderList","handleListItemClick","index","console","log","selectedIndex","refreshState","asyncToGenerator","regenerator_default","mark","_callee","oldState","wrap","_context","prev","next","sent","loading","abrupt","stop","componentWillMount","_this2","_this$state","items","keys","map","Fragment","List_default","item","ListItem_default","button","Avatar_default","Image_default","ListItemText_default","primary","secondary","ListItemSecondaryAction_default","Edit_default","CircularProgress_default","dispatch","backgroundColor","CheckboxList","checked","handleToggle","currentIndex","indexOf","newChecked","push","splice","role","Checkbox_default","tabIndex","disableRipple","Delete_default","palette","background","paper","App","elements","handleChangeItems","new_item","mod_array","appBar","secondAppBar","Group","components_List","Boolean","window","location","hostname","match","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0818b2e.chunk.js","sourcesContent":["import CacheManager from '../../cache'\r\nimport {ADD_TODO, REFRESH_STATE} from \"../actionTypes\";\r\n\r\n\r\nconst initialState = {\r\n    allIds:[],\r\n    byIds: {}\r\n};\r\n\r\nconst cache = new CacheManager();\r\nlet newState;\r\n\r\nexport default function (state = initialState, action) {\r\n    switch ( action.type) {\r\n        case ADD_TODO: {\r\n            const {content} = action.payload;\r\n            let  id = state.allIds.length;\r\n            newState = {\r\n                ...state,\r\n                allIds: [...state.allIds, id],\r\n                byIds: {\r\n                    ...state.byIds,\r\n                    [id]: {\r\n                        content,\r\n                        completed: false\r\n                    }\r\n                }\r\n            };\r\n            cache.writeData('state',newState);\r\n            return newState;\r\n        }\r\n        case REFRESH_STATE:\r\n            return action.state\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import localforage from 'localforage'\r\n\r\nexport default class CacheManager {\r\n    writeData = (key,data) => localforage.setItem(key, data)\r\n    readData = key => localforage.getItem(key)\r\n    removeData = key => localforage.removeItem(key)\r\n    clear = () => localforage.clear()\r\n}","import  {combineReducers } from \"redux\";\r\nimport todos from \"./todos\";\r\n\r\nexport default combineReducers({todos});","export const ADD_TODO = \"ADD_TODO\";\r\nexport const REFRESH_STATE = \"REFRESH_STATE\";","import { createStore } from \"redux\";\r\nimport rootReducer from \"./Reducers\";\r\n\r\nexport default createStore(rootReducer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n    },\r\n};\r\nfunction ButtonAppBar(props) {\r\n    const { classes } = props;\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"secondary\">\r\n                <Toolbar>\r\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n                        MY APP\r\n                    </Typography>\r\n                    <Button color=\"inherit\">LOGIN</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nButtonAppBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ButtonAppBar);","import {ADD_TODO,REFRESH_STATE} from \"./actionTypes\";\r\n\r\nlet nextTodoId = 0;\r\n\r\nexport const addTodo = content => ({\r\n    type: ADD_TODO,\r\n    payload:{\r\n        id: ++nextTodoId,\r\n        content\r\n    }\r\n});\r\nexport const refreshState = state => ({\r\n    type: REFRESH_STATE,\r\n    state\r\n})","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addTodo } from \"../Redux/actions\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    dense: {\r\n        marginTop: 5,\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nclass OutlinedTextFields extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { input: \"\" };\r\n    }\r\n    handleChange = () => event => {\r\n        this.setState({input: event.target.value});\r\n    };\r\n    handleClickAddItem = () => {\r\n       this.props.addTodo(this.state.input);\r\n       this.setState({input: \"\"});\r\n\r\n    };\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n                <TextField\r\n                    id=\"outlined-name\"\r\n                    label=\"Input\"\r\n                    fullWidth\r\n                    className={classes.dense}\r\n                    variant=\"outlined\"\r\n                    onChange={this.handleChange()}\r\n                    value={this.state.input}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"Add Item\"\r\n                                    onClick={this.handleClickAddItem}\r\n                                ><SendIcon/>\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n\r\n        );\r\n    }\r\n}\r\n\r\nOutlinedTextFields.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(null,{ addTodo })(withStyles(styles)(OutlinedTextFields));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport OutlinedTextFields from './textField'\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n};\r\n\r\nclass SimpleAppBar extends React.Component{\r\n    render(){\r\n    const { classes, add_item } = this.props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Toolbar>\r\n                    <OutlinedTextFields add_item = {add_item}/>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nSimpleAppBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleAppBar);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { refreshState } from \"../Redux/actions\";\r\nimport  CacheManager from '../cache';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst styles = () => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: 4,\r\n        backgroundColor: 'white',\r\n    },\r\n});\r\n\r\n    class FolderList extends React.Component {\r\n        constructor(){\r\n            super();\r\n            this.state = {\r\n                selectedIndex: null,\r\n            };\r\n            this.cache = new CacheManager();\r\n        }\r\n        handleListItemClick = (index) => {\r\n            console.log(index);\r\n            this.setState({selectedIndex: index});\r\n        };\r\n\r\n        refreshState = async () => {\r\n            const oldState = await this.cache.readData('state');\r\n            this.setState({loading:false})\r\n            if (!oldState){\r\n                // If oldState is null, save it locally\r\n                const data = this.state\r\n                this.cache.writeData('state',data)\r\n                return\r\n            }\r\n            this.props.refreshState(oldState)\r\n        }\r\n\r\n        componentWillMount = () => {\r\n            this.setState({loading:true});\r\n            this.refreshState()\r\n        }\r\n\r\n        render() {\r\n            const {classes, todos} = this.props;\r\n            const {selectedIndex, loading} = this.state;\r\n         const items = Object.keys(todos).map(key=>todos[key]);\r\n            return (\r\n                <React.Fragment>\r\n                    <b>{selectedIndex}</b>\r\n                <List className={classes.root}>\r\n                    {items && items.length\r\n                    ? items.map((item,index) => (\r\n                    <ListItem\r\n                        key={index}\r\n                        button\r\n                        onClick={() => this.handleListItemClick(index)}\r\n                    >\r\n                        <Avatar>\r\n                        <ImageIcon/>\r\n                        {index}\r\n                        </Avatar>\r\n                        <ListItemText primary={item.content} secondary=\"Jan 9, 2014\"/>\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton aria-label=\"Delete\">\r\n                                <EditIcon/>\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                        ))\r\n                    :(loading ?\r\n                            <CircularProgress/>\r\n                                : \"Пусто\")\r\n                    }\r\n                </List>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\nFolderList.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n    const mapStateToProps = state => {\r\n        const todos = state.todos.byIds;\r\n        console.log(todos);\r\n        return { todos };\r\n    };\r\n    const mapDispatchToProps = dispatch => ({\r\n        refreshState: state => dispatch(refreshState(state))\r\n    })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FolderList));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: 2,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n});\r\n\r\nclass CheckboxList extends React.Component {\r\n    state = {\r\n        checked: [0],\r\n    };\r\n\r\n    handleToggle = value => () => {\r\n        const { checked } = this.state;\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        this.setState({\r\n            checked: newChecked,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <List className={classes.root}>\r\n                {[0, 1, 2, 3].map(value => (\r\n                    <ListItem key={value} role={undefined} dense button onClick={this.handleToggle(value)}>\r\n                        <Checkbox\r\n                            checked={this.state.checked.indexOf(value) !== -1}\r\n                            tabIndex={-1}\r\n                            disableRipple\r\n                        />\r\n                        <ListItemText primary={`Line ${value + 1}`} />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton aria-label=\"Comments\">\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        );\r\n    }\r\n}\r\n\r\nCheckboxList.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CheckboxList);","import React, { Component } from 'react';\nimport ButtonAppBar from './components/appBar'\nimport SimpleAppBar from './components/secondAppBar'\nimport FolderList from './components/Group'\nimport CheckboxList from './components/List'\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        elements: ['10','2','3','4']\n    }\n    handleChangeItems = (new_item) => {\n        let mod_array = this.state.elements;\n        mod_array.push(new_item);\n        this.setState({elements: mod_array});\n    };\n  render() {\n        const{ elements } = this.state;\n    return (\n        <div className=\"App\">\n          <ButtonAppBar/>\n          <SimpleAppBar add_item = {this.handleChangeItems}/>\n            <FolderList items={elements}/>\n            <CheckboxList/>\n        </div>\n    );\n  }\n}\n\nexport default (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}