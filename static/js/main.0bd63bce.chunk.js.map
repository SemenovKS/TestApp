{"version":3,"sources":["components/appBar.js","components/textField.js","components/secondAppBar.js","components/Group.js","components/List.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","props","classes","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Menu_default","Typography_default","variant","Button_default","OutlinedTextFields","state","name","test","handleChange","event","_this","setState","Object","defineProperty","target","value","handleClickAddItem","this","TextField_default","id","label","fullWidth","dense","onChange","margin","InputProps","endAdornment","InputAdornment_default","onClick","Send_default","React","Component","theme","container","display","flexWrap","textField","spacing","unit","marginTop","menu","width","FolderList","selectedIndex","handleListItemClick","index","console","log","_this2","List_default","ListItem_default","button","Avatar_default","Image_default","ListItemText_default","primary","secondary","ListItemSecondaryAction_default","Edit_default","backgroundColor","CheckboxList","checked","handleToggle","currentIndex","indexOf","newChecked","toConsumableArray","push","splice","map","key","role","undefined","Checkbox_default","tabIndex","disableRipple","concat","Delete_default","palette","background","paper","App","appBar","secondAppBar","Group","components_List","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0bd63bce.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n    },\r\n};\r\n\r\nfunction ButtonAppBar(props) {\r\n    const { classes } = props;\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n                        MY APP\r\n                    </Typography>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nButtonAppBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ButtonAppBar);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    dense: {\r\n        marginTop: 5,\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nclass OutlinedTextFields extends React.Component {\r\n    state = {\r\n        name: '',\r\n        test:'',\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n    handleClickAddItem = () => {\r\n        this.setState({test:this.state.name});\r\n    };\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n                <TextField\r\n                    id=\"outlined-name\"\r\n                    label=\"Input\"\r\n                    fullWidth\r\n                    className={classes.dense}\r\n                    onChange={this.handleChange('name')}\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"Add Item\"\r\n                                    onClick={this.handleClickAddItem}\r\n                                ><SendIcon/>\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n\r\n        );\r\n    }\r\n}\r\n\r\nOutlinedTextFields.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(OutlinedTextFields);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport OutlinedTextFields from './textField'\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n};\r\n\r\nfunction SimpleAppBar(props) {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Toolbar>\r\n                    <OutlinedTextFields/>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nSimpleAppBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleAppBar);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst styles = () => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: 4,\r\n        backgroundColor: 'white',\r\n    },\r\n});\r\n\r\n    class FolderList extends React.Component {\r\n        state = {\r\n            selectedIndex: 1,\r\n        };\r\n        handleListItemClick = (index) => {\r\n            console.log(index);\r\n            this.setState({selectedIndex: index});\r\n        };\r\n        render() {\r\n            const {classes} = this.props;\r\n            return (\r\n                <List className={classes.root}>\r\n                    <ListItem\r\n                        button\r\n                        onClick={() => this.handleListItemClick(0)}\r\n                    >\r\n                        <Avatar>\r\n                        <ImageIcon/>\r\n                        </Avatar>\r\n                        <ListItemText primary=\"Photos\" secondary=\"Jan 9, 2014\"/>\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton aria-label=\"Delete\">\r\n                                <EditIcon/>\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                </List>\r\n            );\r\n        }\r\n    }\r\n\r\nFolderList.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FolderList);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: 2,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n});\r\n\r\nclass CheckboxList extends React.Component {\r\n    state = {\r\n        checked: [0],\r\n    };\r\n\r\n    handleToggle = value => () => {\r\n        const { checked } = this.state;\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        this.setState({\r\n            checked: newChecked,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <List className={classes.root}>\r\n                {[0, 1, 2, 3].map(value => (\r\n                    <ListItem key={value} role={undefined} dense button onClick={this.handleToggle(value)}>\r\n                        <Checkbox\r\n                            checked={this.state.checked.indexOf(value) !== -1}\r\n                            tabIndex={-1}\r\n                            disableRipple\r\n                        />\r\n                        <ListItemText primary={`Line ${value + 1}`} />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton aria-label=\"Comments\">\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        );\r\n    }\r\n}\r\n\r\nCheckboxList.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CheckboxList);","import React, { Component } from 'react';\nimport ButtonAppBar from './components/appBar'\nimport SimpleAppBar from './components/secondAppBar'\nimport FolderList from './components/Group'\nimport CheckboxList from './components/List'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n          <ButtonAppBar/>\n          <SimpleAppBar/>\n            <FolderList/>\n            <CheckboxList/>\n        </div>\n    );\n  }\n}\n\nexport default (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}